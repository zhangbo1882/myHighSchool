cscope 15 $HOME/myProject -q 0000000054 0000007091
	@/home/Aaron/myProject/aaron.h

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	~"dLi°.h
"

	@/home/Aaron/myProject/dList.c

1 
	~"Ør⁄.h
"

2 
dLi°Lök
 *
	$dLi°LökInô
()

4 
dLi°Lök
 *
li°
 = (dLi°Lök *)
	`myMÆloc
((dListLink));

5 if(
li°
)

7 
li°
->
hód
 = 
NULL
;

8 
li°
->
èû
 = 
NULL
;

9 
li°
->
nodeCou¡
 = 0;

11  
li°
;

12 
	}
}

14 
dLi°Node
 *
	$dLi°NodeCª©e
(*
d©a
)

16 
dLi°Node
 *
p
 = (dLi°Nodê*)
	`myMÆloc
((dListNode));

17 if(
p
)

19 
p
->
¥ev
 = 
NULL
;

20 
p
->
√xt
 = 
NULL
;

21 
p
->
d©a
 = data;

23  
p
;

24 
	}
}

26 
	$dLi°NodeFªe
(
dLi°Node
 *
p
)

28 
	`myFªe
(&
p
);

30 
	}
}

32 
	$dLi°LökIn£πHód
(
dLi°Lök
 *
li°
, 
dLi°Node
 *
p
)

34 if(!
li°
 || !
p
)

36 
	`¥ötf
("%†%dÜi° o∏nodêi†NULL\n", 
__FUNCTION__
, 
__LINE__
);

39 if(
li°
->
hód
 =
NULL
)

41 
li°
->
hód
 = 
p
;

42 
li°
->
èû
 = 
p
;

43 
p
->
¥ev
 = 
NULL
;

44 
p
->
√xt
 = 
NULL
;

49 
p
->
¥ev
 = 
NULL
;

50 
p
->
√xt
 = 
li°
->
hód
;

51 
li°
->
hód
->
¥ev
 = 
p
;

52 
li°
->
hód
 = 
p
;

55 
li°
->
nodeCou¡
++;

57 
	}
}

59 
	$dLi°LökIn£πTaû
(
dLi°Lök
 *
li°
, 
dLi°Node
 *
p
)

61 if(!
li°
 || !
p
)

63 
	`¥ötf
("%†%dÜi° o∏nodêi†NULL\n", 
__FUNCTION__
, 
__LINE__
);

66 if(
li°
->
èû
 =
NULL
)

68 
li°
->
hód
 = 
p
;

69 
li°
->
èû
 = 
p
;

70 
p
->
¥ev
 = 
NULL
;

71 
p
->
√xt
 = 
NULL
;

75 
p
->
¥ev
 = 
li°
->
èû
;

76 
li°
->
èû
->
√xt
 = 
p
;

77 
li°
->
èû
 = 
p
;

78 
p
->
√xt
 = 
NULL
;

80 
li°
->
nodeCou¡
++;

82 
	}
}

84 
	$dLi°LökIn£πB
(
dLi°Lök
 *
li°
, 
dLi°Node
 *
pos
, dLi°Nodê*
p
)

86 if(
li°
->
èû
 =
pos
)

88 
	`dLi°LökIn£πTaû
(
li°
, 
p
);

93 
p
->
√xt
 = 
pos
->next;

94 
p
->
√xt
->
¥ev
 =Ö;

95 
pos
->
√xt
 = 
p
;

96 
p
->
¥ev
 = 
pos
;

99 
	}
}

101 
	$dLi°LökIn£πF
(
dLi°Lök
 *
li°
, 
dLi°Node
 *
pos
, dLi°Nodê*
p
)

103 if(
li°
->
hód
 =
pos
)

105 
	`dLi°LökIn£πHód
(
li°
, 
p
);

110 
pos
->
¥ev
->
√xt
 = 
p
;

111 
p
->
¥ev
 = 
pos
->prev;

112 
p
->
√xt
 = 
pos
;

113 
pos
->
¥ev
 = 
p
;

116 
	}
}

117 
	$dLi°LökDñëeHód
(
dLi°Lök
 *
li°
)

119 
dLi°Node
 *
p
 = 
li°
->
hód
;

120 if(!
p
)

124 if(
li°
->
hód
 !li°->
èû
)

126 
li°
->
hód
 =Üi°->hód->
√xt
;

127 
li°
->
hód
->
¥ev
 = 
NULL
;

131 
li°
->
hód
 = 
NULL
;

132 
li°
->
èû
 = 
NULL
;

134 
li°
->
nodeCou¡
--;

135 
	`dLi°NodeFªe
(
p
);

137 
	}
}

139 
	$dLi°LökDñëeTaû
(
dLi°Lök
 *
li°
)

141 
dLi°Node
 *
p
 = 
li°
->
èû
;

142 if(!
p
)

146 if(
li°
->
hód
 !li°->
èû
)

148 
li°
->
èû
 =Üi°->èû->
¥ev
;

149 
li°
->
èû
->
√xt
 = 
NULL
;

153 
li°
->
hód
 = 
NULL
;

154 
li°
->
èû
 = 
NULL
;

156 
	`dLi°NodeFªe
(
p
);

157 
li°
->
nodeCou¡
--;

159 
	}
}

161 
	$dLi°LökDñëe
(
dLi°Lök
 *
li°
, 
dLi°Node
 *
p
)

163 if(
li°
->
hód
 =
p
)

165 
	`dLi°LökDñëeHód
(
li°
);

168 if(
li°
->
èû
 =
p
)

170 
	`dLi°LökDñëeTaû
(
li°
);

175 
p
->
¥ev
->
√xt
 =Ö->next;

176 
p
->
√xt
->
¥ev
 =Ö->prev;

177 
	`dLi°NodeFªe
(
p
);

178 
li°
->
nodeCou¡
--;

182 
	}
}

184 
	$dLi°LökDe°roy
(
dLi°Lök
 *
li°
)

186 
dLi°Node
 *
cuº
 = 
li°
->
hód
;

187 
dLi°Node
 *
dñ
 = 
cuº
;

188 
cuº
)

190 
dñ
 = 
cuº
;

191 
cuº
 = cuº->
√xt
;

192 
	`dLi°LökDñëe
(
li°
, 
dñ
);

194 
	`myFªe
(&
li°
);

196 
	}
}

198 
	$dLi°Iãr
(
dLi°Lök
 *
li°
, 
dLi°IãrCB
 
‚
)

200 
dLi°Node
 *
p
 = 
li°
->
hód
;

201 
p
)

203 
	`‚
(
li°
, 
p
);

204 
p
 =Ö->
√xt
;

207 
	}
}

209 
	$dLi°LökPrötI¡
(
dLi°Lök
 *
li°
,
dLi°Node
 *
p
)

211 
	`¥ötf
("d©a: %d\n",*(*)(
p
->
d©a
));

212 
	}
}

213 
	$dLi°LökPrötSåög
(
dLi°Lök
 *
li°
,
dLi°Node
 *
p
)

215 
	`¥ötf
("d©a: %s\n",(*)(
p
->
d©a
));

216 
	}
}

217 
	$dLi°LökPrötD©a
(
dLi°Lök
 *
li°
,
dLi°Node
 *
p
)

219 
	`¥ötf
("d©a: %p\n",(
p
->
d©a
));

220 
	}
}

	@/home/Aaron/myProject/dList.h

1 #i‚de‡
_DLIST_H_


2 
	#_DLIST_H_


	)

4 
	s_dLi°Node


6 
_dLi°Node
 *
	m¥ev
;

7 
_dLi°Node
 *
	m√xt
;

8 *
	md©a
;

9 }
	tdLi°Node
;

10 
	s_dLi°Lök


12 
dLi°Node
 *
	mhód
;

13 
dLi°Node
 *
	mèû
;

14 
	mnodeCou¡
;

15 }
	tdLi°Lök
;

16 
dLi°Lök
 *
dLi°LökInô
();

17 
dLi°Node
 *
dLi°NodeCª©e
(*
d©a
);

18 
dLi°LökDe°roy
(
dLi°Lök
 *
li°
);

19 
dLi°LökIn£πHód
(
dLi°Lök
 *
li°
, 
dLi°Node
 *
p
);

20 
dLi°LökIn£πTaû
(
dLi°Lök
 *
li°
, 
dLi°Node
 *
p
);

21 
dLi°LökIn£πF
(
dLi°Lök
 *
li°
, 
dLi°Node
 *
pos
, dLi°Nodê*
p
);

22 
dLi°LökIn£πB
(
dLi°Lök
 *
li°
, 
dLi°Node
 *
pos
, dLi°Nodê*
p
);

23 
dLi°LökDñëeHód
(
dLi°Lök
 *
li°
);

24 
dLi°LökDñëeTaû
(
dLi°Lök
 *
li°
);

25 
dLi°NodeFªe
(
dLi°Node
 *
p
);

26 (*
	tdLi°IãrCB
)(
	tdLi°Lök
 *
	tli°
, 
	tdLi°Node
 *
	tp
);

27 
	`dLi°Iãr
(
dLi°Lök
 *
li°
, 
dLi°IãrCB
 
‚
);

28 
	`dLi°LökPrötI¡
(
dLi°Lök
 *
li°
, 
dLi°Node
 *
p
);

29 
	`dLi°LökPrötSåög
(
dLi°Lök
 *
li°
, 
dLi°Node
 *
p
);

30 
	`dLi°LökPrötD©a
(
dLi°Lök
 *
li°
, 
dLi°Node
 *
p
);

	@/home/Aaron/myProject/memory.c

1 
	~"Ør⁄.h
"

2 *
	$myMÆloc
(
size
)

4 *
p
 = 
	`mÆloc
(
size
);

5 if(!
p
)

7 
	`¥ötf
("mÆlo¯sizê%d faû\n", 
size
);

9  
p
;

10 
	}
}

12 
	$myFªe
(**
p
)

14 if(*
p
 =
NULL
)

16 
	`¥ötf
("free is NULL\n");

18 
	`¥ötf
("‰ì mem‹y %p\n", *
p
);

19 
	`‰ì
(*
p
);

20 *
p
 = 
NULL
;

21 
	}
}

	@/home/Aaron/myProject/test.c

1 
	~"Ør⁄.h
"

2 *
	g«me
[5] = {"Eric", "Spiller", "Aaron", "Amos", "Terry"};

3 
	gdigôÆ
[10] = {0,1,2,3,4,5,6,7,8,9};

4 
	$maö
()

6 
i
;

7 
dLi°Lök
 *
myLi°1
 = 
	`dLi°LökInô
();

8 
dLi°Lök
 *
myLi°2
 = 
	`dLi°LökInô
();

9 if(
myLi°1
)

11 
i
 = 0; i < 5; i++)

13 
dLi°Node
 *
p
 = 
	`dLi°NodeCª©e
(
«me
[
i
]);

14 
	`dLi°LökIn£πTaû
(
myLi°1
, 
p
);

17 if(
myLi°2
)

19 
i
 = 0; i < 10; i++)

21 
dLi°Node
 *
q
 = 
	`dLi°NodeCª©e
(&
digôÆ
[
i
]);

22 
	`dLi°LökIn£πTaû
(
myLi°2
, 
q
);

26 
	`¥ötf
("myLi°1ÇodeCou¡: %d\n", 
myLi°1
->
nodeCou¡
);

27 
	`¥ötf
("myLi°2ÇodeCou¡: %d\n", 
myLi°2
->
nodeCou¡
);

28 
	`dLi°Iãr
(
myLi°1
, 
dLi°LökPrötSåög
);

29 
	`dLi°Iãr
(
myLi°2
, 
dLi°LökPrötI¡
);

33 
	`dLi°LökDe°roy
(
myLi°1
);

35 
	`dLi°LökDe°roy
(
myLi°2
);

37 
	}
}

	@aaron.h

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	~"dLi°.h
"

	@dList.h

1 #i‚de‡
_DLIST_H_


2 
	#_DLIST_H_


	)

4 
	s_dLi°Node


6 
_dLi°Node
 *
	m¥ev
;

7 
_dLi°Node
 *
	m√xt
;

8 *
	md©a
;

9 }
	tdLi°Node
;

10 
	s_dLi°Lök


12 
dLi°Node
 *
	mhód
;

13 
dLi°Node
 *
	mèû
;

14 
	mnodeCou¡
;

15 }
	tdLi°Lök
;

16 
dLi°Lök
 *
dLi°LökInô
();

17 
dLi°Node
 *
dLi°NodeCª©e
(*
d©a
);

18 
dLi°LökDe°roy
(
dLi°Lök
 *
li°
);

19 
dLi°LökIn£πHód
(
dLi°Lök
 *
li°
, 
dLi°Node
 *
p
);

20 
dLi°LökIn£πTaû
(
dLi°Lök
 *
li°
, 
dLi°Node
 *
p
);

21 
dLi°LökIn£πF
(
dLi°Lök
 *
li°
, 
dLi°Node
 *
pos
, dLi°Nodê*
p
);

22 
dLi°LökIn£πB
(
dLi°Lök
 *
li°
, 
dLi°Node
 *
pos
, dLi°Nodê*
p
);

23 
dLi°LökDñëeHód
(
dLi°Lök
 *
li°
);

24 
dLi°LökDñëeTaû
(
dLi°Lök
 *
li°
);

25 
dLi°NodeFªe
(
dLi°Node
 *
p
);

26 (*
	tdLi°IãrCB
)(
	tdLi°Lök
 *
	tli°
, 
	tdLi°Node
 *
	tp
);

27 
	`dLi°Iãr
(
dLi°Lök
 *
li°
, 
dLi°IãrCB
 
‚
);

28 
	`dLi°LökPrötI¡
(
dLi°Lök
 *
li°
, 
dLi°Node
 *
p
);

29 
	`dLi°LökPrötSåög
(
dLi°Lök
 *
li°
, 
dLi°Node
 *
p
);

30 
	`dLi°LökPrötD©a
(
dLi°Lök
 *
li°
, 
dLi°Node
 *
p
);

	@
1
.
0
7
166
/home/Aaron/myProject/aaron.h
/home/Aaron/myProject/dList.c
/home/Aaron/myProject/dList.h
/home/Aaron/myProject/memory.c
/home/Aaron/myProject/test.c
aaron.h
dList.h
